{"version":3,"sources":["Components/Navbar.js","Components/Calculator.js","App.js","index.js"],"names":["Navbar","className","href","Calculator","useState","currElement","setcurrElement","prevElement","setprevElement","operator","setOperator","decimal","setdecimalOperator","chooseOperation","operand","compute","computation","prevValue","parseFloat","currValue","console","log","isNaN","clear","useEffect","toLocaleString","maximumFractionDigits","onClick","event","values","target","innerHTML","toString","includes","slice","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1dd0d12a.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../Stylesheets/Navbar.css';\r\nimport '../style.css';\r\nconst Navbar = () => {\r\n  return (\r\n    <div>\r\n      <nav className=\"nav-bar\">\r\n        <div className=\"brand-name\">Crypto Calculator</div>\r\n        <ul>\r\n          <li>\r\n            <a href=\"Home\" />\r\n            Home\r\n          </li>\r\n          <li>\r\n            <a href=\"About\" />\r\n            About\r\n          </li>\r\n          <li>\r\n            <a href=\"Contact\" />\r\n            Contact\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport '../Stylesheets/Calculator.css';\r\nimport '../style.css';\r\nconst Calculator = () => {\r\n  let [currElement, setcurrElement] = useState('0');\r\n  let [prevElement, setprevElement] = useState('');\r\n  let [operator, setOperator] = useState('');\r\n  let [decimal, setdecimalOperator] = useState('0');\r\n  const Handler = event => {\r\n    const values = event.target;\r\n    if (values.className === 'number' && values.innerHTML !== '.') {\r\n      setcurrElement(() => {\r\n        currElement += values.innerHTML.toString();\r\n        currElement = parseFloat(currElement);\r\n        return (currElement = currElement.toString());\r\n      });\r\n      console.log(currElement);\r\n    }\r\n    if (values.className === 'operand') {\r\n      setOperator(() => {\r\n        if (operator !== '') {\r\n          return operator;\r\n        } else {\r\n          return (operator = values.innerHTML);\r\n        }\r\n      });\r\n      chooseOperation(operator);\r\n      setprevElement((prevElement = currElement));\r\n      setcurrElement((currElement = ''));\r\n      setOperator((operator = values.innerHTML));\r\n    }\r\n    if (values.innerHTML === '.') {\r\n      setcurrElement(() => {\r\n        if (currElement.includes('.')) {\r\n          console.log('1');\r\n          return currElement;\r\n        } else {\r\n          console.log(currElement.slice(-1));\r\n          return (currElement += values.innerHTML);\r\n        }\r\n      });\r\n    }\r\n    if (values.innerHTML === '=') {\r\n      compute(operator);\r\n    }\r\n    if (values.innerHTML === 'AC') {\r\n      clear();\r\n    }\r\n    if (values.innerHTML === 'DEL') {\r\n      setcurrElement((currElement = currElement.toString().slice(0, -1)));\r\n    }\r\n  };\r\n  const chooseOperation = operand => {\r\n    if (currElement === '') return;\r\n    if (prevElement != '') {\r\n      compute(operand);\r\n    }\r\n  };\r\n  const compute = operand => {\r\n    let computation;\r\n    const prevValue = parseFloat(prevElement);\r\n    const currValue = parseFloat(currElement);\r\n    console.log(prevValue, currValue, operand);\r\n    if (isNaN(prevValue) || isNaN(currValue)) return;\r\n    switch (operand) {\r\n      case '*':\r\n        computation = prevValue * currValue;\r\n        break;\r\n      case '-':\r\n        computation = prevValue - currValue;\r\n        break;\r\n      case '+':\r\n        computation = prevValue + currValue;\r\n        break;\r\n      case '/':\r\n        computation = prevValue / currValue;\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    setcurrElement((currElement = computation));\r\n    setprevElement((prevElement = ''));\r\n    setOperator((operator = ''));\r\n  };\r\n  const clear = () => {\r\n    setprevElement((prevElement = ''));\r\n    setcurrElement((currElement = ''));\r\n    setOperator((operator = ''));\r\n  };\r\n  useEffect(() => {\r\n    setdecimalOperator(\r\n      (decimal = currElement.toLocaleString('en', {\r\n        maximumFractionDigits: 0\r\n      }))\r\n    );\r\n    console.log('effect');\r\n  }, [currElement]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"calculator-body\">\r\n        <div className=\"output\">\r\n          <div className=\"previousOperationText\">{prevElement}</div>\r\n          <div className=\"operand\">{operator}</div>\r\n          <div className=\"currentOperationText\">{decimal}</div>\r\n        </div>\r\n        <div className=\"operators\" onClick={Handler}>\r\n          <button className=\"allClear span-two\">AC</button>\r\n          <button className=\"delete\">DEL</button>\r\n          <button className=\"operand\">/</button>\r\n          <button className=\"number\">1</button>\r\n          <button className=\"number\">2</button>\r\n          <button className=\"number\">3</button>\r\n          <button className=\"operand\">*</button>\r\n          <button className=\"number\">4</button>\r\n          <button className=\"number\">5</button>\r\n          <button className=\"number\">6</button>\r\n          <button className=\"operand\">-</button>\r\n          <button className=\"number\">7</button>\r\n          <button className=\"number\">8</button>\r\n          <button className=\"number\">9</button>\r\n          <button className=\"operand\">+</button>\r\n          <button className=\"number\">0</button>\r\n          <button className=\"number\">.</button>\r\n          <button className=\"equals span-two\">=</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import React from 'react';\r\nimport './style.css';\r\nimport Navbar from './Components/Navbar.js';\r\nimport Calculator from './Components/Calculator.js';\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Calculator />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}